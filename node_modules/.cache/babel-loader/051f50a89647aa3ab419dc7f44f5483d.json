{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/newTest/Viewers_Frontend/src/Components/Views.js\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport swal from 'sweetalert2';\nexport default class Viewers extends React.Component {\n  //state will store plataform, channel and num of viewers\n  constructor(props) {\n    super(props);\n\n    this.handleRequest = () => {\n      this.setState({\n        status: false\n      });\n      const data = {\n        website: this.state.channel,\n        numOfViewers: this.state.numOfViewers,\n        status: \"active\"\n      };\n      console.log(data);\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(`https://viewersbackend.herokuapp.com/api`, options).then(resp => resp.json()).then(data => {\n        swal.fire(data.status);\n      }).catch(err => {\n        // Error handling\n        console.log(\"Error Reading data \" + err);\n      });\n    };\n\n    this.handleStatusState = () => {\n      const data = {\n        website: this.state.channel,\n        numOfViewers: this.state.numOfViewers,\n        status: \"close\"\n      };\n      console.log(data);\n      this.setState({\n        status: true\n      });\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(`https://viewersbackend.herokuapp.com/api`, options).then(resp => resp.json()).then(data => {\n        swal.fire(data.status);\n      }).catch(err => {\n        // Error handling\n        console.log(\"Error Reading data \" + err);\n      });\n    };\n\n    this.handleChannelPreview = e => {\n      //check if channel is youtube or facebook and return the correct url for embeding.\n      this.setState({\n        numOfViewers: e.currentTarget.value\n      });\n\n      if (this.state.channelName.includes(\"facebook\")) {\n        let newLink = this.state.channelName.split(\"/\");\n        this.setState({\n          url: `https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2F${newLink[3]}%2Fvideos%2F${newLink[5]}%2F&show_text=false&width=734&appId=807760243060402&height=414`\n        });\n        return this.state.url;\n      } else {\n        this.setState({\n          url: this.state.channel.replace(\"watch?v=\", \"embed/\")\n        });\n        return this.state.url;\n      }\n    };\n\n    this.state = {\n      channel: '',\n      numOfViewers: 0,\n      status: true,\n      url: ''\n    };\n  } //handlers for request to start and stop viewing.\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Form-Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      src: this.state.url,\n      width: \"560\",\n      height: \"315\",\n      scrolling: \"no\",\n      frameBorder: \"0\",\n      allowFullScreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Enter Channel Website\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: e => {\n        this.setState({\n          channel: e.currentTarget.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"https://www.twitch.tv/user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"This process is for testing only.\"), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Desired Number of Viewers\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: e => {},\n      type: \"text\",\n      placeholder: \"Number of Viewers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), this.state.status === false ? /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleStatusState,\n      variant: \"danger\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Stop\") : /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleRequest,\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \" Send\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/newTest/Viewers_Frontend/src/Components/Views.js"],"names":["React","Form","Button","swal","Viewers","Component","constructor","props","handleRequest","setState","status","data","website","state","channel","numOfViewers","console","log","options","method","headers","body","JSON","stringify","fetch","then","resp","json","fire","catch","err","handleStatusState","handleChannelPreview","e","currentTarget","value","channelName","includes","newLink","split","url","replace","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,eAAe,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAqC;AAClD;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,aATmB,GASL,MAAI;AAChB,WAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAd;AACA,YAAMC,IAAI,GAAG;AAACC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAArB;AAA8BC,QAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWE,YAAvD;AAAqEL,QAAAA,MAAM,EAAE;AAA7E,OAAb;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,YAAMO,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,MADM;AAEdC,QAAAA,OAAO,EAAG;AACR,0BAAgB;AADR,SAFI;AAKdC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AALQ,OAAhB;AAOAa,MAAAA,KAAK,CAAE,0CAAF,EAA6CN,OAA7C,CAAL,CACCO,IADD,CACMC,IAAI,IAAEA,IAAI,CAACC,IAAL,EADZ,EAECF,IAFD,CAEMd,IAAI,IAAI;AAACR,QAAAA,IAAI,CAACyB,IAAL,CAAUjB,IAAI,CAACD,MAAf;AAAuB,OAFtC,EAICmB,KAJD,CAIOC,GAAG,IAAI;AACZ;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBa,GAApC;AACD,OAPD;AASD,KA7BkB;;AAAA,SA8BnBC,iBA9BmB,GA8BD,MAAI;AACpB,YAAMpB,IAAI,GAAG;AAACC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAArB;AAA8BC,QAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWE,YAAvD;AAAqEL,QAAAA,MAAM,EAAE;AAA7E,OAAb;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,WAAKF,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAd;AACA,YAAMQ,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,MADM;AAEdC,QAAAA,OAAO,EAAG;AACR,0BAAgB;AADR,SAFI;AAKdC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AALQ,OAAhB;AAOAa,MAAAA,KAAK,CAAE,0CAAF,EAA6CN,OAA7C,CAAL,CACCO,IADD,CACMC,IAAI,IAAEA,IAAI,CAACC,IAAL,EADZ,EAECF,IAFD,CAEMd,IAAI,IAAI;AAACR,QAAAA,IAAI,CAACyB,IAAL,CAAUjB,IAAI,CAACD,MAAf;AAAuB,OAFtC,EAICmB,KAJD,CAIOC,GAAG,IAAI;AACZ;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBa,GAApC;AACD,OAPD;AAQD,KAjDkB;;AAAA,SAkDnBE,oBAlDmB,GAkDGC,CAAD,IAAK;AAAE;AAC1B,WAAKxB,QAAL,CAAc;AAAEM,QAAAA,YAAY,EAAEkB,CAAC,CAACC,aAAF,CAAgBC;AAAhC,OAAd;;AACA,UAAG,KAAKtB,KAAL,CAAWuB,WAAX,CAAuBC,QAAvB,CAAgC,UAAhC,CAAH,EAA+C;AAC7C,YAAIC,OAAO,GAAG,KAAKzB,KAAL,CAAWuB,WAAX,CAAuBG,KAAvB,CAA6B,GAA7B,CAAd;AACE,aAAK9B,QAAL,CAAc;AAAC+B,UAAAA,GAAG,EAAE,oFAAmFF,OAAO,CAAC,CAAD,CAAI,eAAcA,OAAO,CAAC,CAAD,CAAI;AAA7H,SAAd;AACF,eAAO,KAAKzB,KAAL,CAAW2B,GAAlB;AACD,OAJD,MAIK;AACH,aAAK/B,QAAL,CAAc;AAAC+B,UAAAA,GAAG,EAAE,KAAK3B,KAAL,CAAWC,OAAX,CAAmB2B,OAAnB,CAA2B,UAA3B,EAAsC,QAAtC;AAAN,SAAd;AACA,eAAO,KAAK5B,KAAL,CAAW2B,GAAlB;AACD;AACF,KA5DkB;;AAEjB,SAAK3B,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAE,EAAV;AACCC,MAAAA,YAAY,EAAE,CADf;AAECL,MAAAA,MAAM,EAAE,IAFT;AAGC8B,MAAAA,GAAG,EAAE;AAHN,KAAb;AAKD,GATiD,CAUpD;;;AAsDEE,EAAAA,MAAM,GAAE;AACN,wBAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AACA,MAAA,GAAG,EAAE,KAAK7B,KAAL,CAAW2B,GADhB;AAEA,MAAA,KAAK,EAAC,KAFN;AAGA,MAAA,MAAM,EAAC,KAHP;AAIA,MAAA,SAAS,EAAC,IAJV;AAKA,MAAA,WAAW,EAAC,GALZ;AAMA,MAAA,eAAe,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eASI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BATJ,eAUI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,EAAGP,CAAD,IAAK;AAAC,aAAKxB,QAAL,CAAc;AAAEK,UAAAA,OAAO,EAAEmB,CAAC,CAACC,aAAF,CAAgBC;AAA3B,SAAd;AAAkD,OAAhF;AAAkF,MAAA,IAAI,EAAC,MAAvF;AAA8F,MAAA,WAAW,EAAC,4BAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAWI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAXJ,eAcI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAdJ,eAeI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,EAAGF,CAAD,IAAK,CAAE,CAA/B;AAAiC,MAAA,IAAI,EAAC,MAAtC;AAA6C,MAAA,WAAW,EAAC,mBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,EAgBK,KAAKpB,KAAL,CAAWH,MAAX,KAAsB,KAAtB,gBACD,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKqB,iBAAtB;AAAyC,MAAA,OAAO,EAAC,QAAjD;AAA0D,MAAA,IAAI,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,gBAGD,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKvB,aAAtB;AAAqC,MAAA,OAAO,EAAC,SAA7C;AAAuD,MAAA,IAAI,EAAC,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnBJ,CAFF;AAyBD;;AA1FiD","sourcesContent":["import React from 'react'\nimport { Form, Button } from 'react-bootstrap';\nimport swal from 'sweetalert2';\n\nexport default class Viewers extends React.Component{\n  //state will store plataform, channel and num of viewers\n  constructor(props) {\n    super(props);\n    this.state = {channel: '',\n                  numOfViewers: 0,\n                  status: true,\n                  url: ''\n                  }\n  }\n//handlers for request to start and stop viewing.\n  handleRequest=()=>{\n    this.setState({status: false})\n    const data = {website: this.state.channel, numOfViewers: this.state.numOfViewers, status: \"active\"}\n    console.log(data)\n    const options = {\n      method: 'POST',\n      headers : { \n        'Content-Type': 'application/json',\n       },\n      body: JSON.stringify(data),\n    }\n    fetch(`https://viewersbackend.herokuapp.com/api`, options)\n    .then(resp=>resp.json())\n    .then(data => {swal.fire(data.status)})\n\n    .catch(err => {\n      // Error handling\n      console.log(\"Error Reading data \" + err);\n    });\n\n  }\n  handleStatusState=()=>{\n    const data = {website: this.state.channel, numOfViewers: this.state.numOfViewers, status: \"close\"}\n    console.log(data)\n    this.setState({status: true})\n    const options = {\n      method: 'POST',\n      headers : { \n        'Content-Type': 'application/json',\n       },\n      body: JSON.stringify(data),\n    }\n    fetch(`https://viewersbackend.herokuapp.com/api`, options)\n    .then(resp=>resp.json())\n    .then(data => {swal.fire(data.status)})\n\n    .catch(err => {\n      // Error handling\n      console.log(\"Error Reading data \" + err);\n    });\n  }\n  handleChannelPreview=(e)=>{ //check if channel is youtube or facebook and return the correct url for embeding.\n    this.setState({ numOfViewers: e.currentTarget.value })\n    if(this.state.channelName.includes(\"facebook\")){\n      let newLink = this.state.channelName.split(\"/\")\n        this.setState({url:`https://www.facebook.com/plugins/video.php?href=https%3A%2F%2Fwww.facebook.com%2F${newLink[3]}%2Fvideos%2F${newLink[5]}%2F&show_text=false&width=734&appId=807760243060402&height=414`})\n      return this.state.url\n    }else{\n      this.setState({url: this.state.channel.replace(\"watch?v=\",\"embed/\")})\n      return this.state.url\n    }\n  }\n  \n  render(){\n    return(\n      \n      <div className=\"Form-Container\">\n         <iframe \n         src={this.state.url}\n         width=\"560\" \n         height=\"315\" \n         scrolling=\"no\" \n         frameBorder=\"0\" \n         allowFullScreen></iframe>\n          {/* CHannel or webiste not determine yet. Could have a drop down menu instead with main streaming platforms */}\n          <Form.Label>Enter Channel Website</Form.Label>\n          <Form.Control onChange={(e)=>{this.setState({ channel: e.currentTarget.value })}} type=\"text\" placeholder=\"https://www.twitch.tv/user\"/>\n          <Form.Text className=\"text-muted\">\n            This process is for testing only.\n          </Form.Text>\n          <Form.Label>Desired Number of Viewers</Form.Label>\n          <Form.Control onChange={(e)=>{}} type=\"text\" placeholder=\"Number of Viewers\" />\n          {this.state.status === false ?\n          <Button onClick={this.handleStatusState} variant=\"danger\" type=\"submit\">Stop</Button>\n          :\n          <Button onClick={this.handleRequest} variant=\"success\" type=\"submit\"> Send</Button>\n          }\n      </div>\n    )\n  }\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}