{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/Viewers_Project/Viewers_Frontend/src/Components/Views.js\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nexport default class Viewers extends React.Component {\n  //state will store plataform, channel and num of viewers\n  constructor(props) {\n    super(props);\n    this.state = {\n      plataform: '',\n      channel: '',\n      numOfViewers: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Form-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Select Plataform\"), React.createElement(Form.Control, {\n      onChange: e => {\n        this.setState({\n          plataform: e.currentTarget.value\n        });\n      },\n      as: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Twitch\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Mixer\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Facebook\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Youtube\")), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Enter Channel Name\"), React.createElement(Form.Control, {\n      onChange: e => {\n        this.setState({\n          channel: e.currentTarget.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"Channel Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"This process is for testing only.\"), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Desired Number of Viewers\"), React.createElement(Form.Control, {\n      onChange: e => {\n        this.setState({\n          numOfViewers: e.currentTarget.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"Number of Viewers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: React.createElement(StartBot, {\n        channel: this.state.channel,\n        numOfViewers: this.state.numOfViewers,\n        plataform: this.state.plataform,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }),\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Start Viewers\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/Viewers_Project/Viewers_Frontend/src/Components/Views.js"],"names":["React","Form","Button","Viewers","Component","constructor","props","state","plataform","channel","numOfViewers","render","e","setState","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AAEA,eAAe,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AAClD;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE,EAAZ;AACCC,MAAAA,OAAO,EAAE,EADV;AAECC,MAAAA,YAAY,EAAE;AAFf,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAE;AACN,WAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,EAAGC,CAAD,IAAK;AAAC,aAAKC,QAAL,CAAc;AAAEL,UAAAA,SAAS,EAAEI,CAAC,CAACE,aAAF,CAAgBC;AAA7B,SAAd;AAAoD,OAAlF;AAAoF,MAAA,EAAE,EAAC,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CAFF,EAQE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARF,EASE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,EAAGH,CAAD,IAAK;AAAC,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,OAAO,EAAEG,CAAC,CAACE,aAAF,CAAgBC;AAA3B,SAAd;AAAkD,OAAhF;AAAkF,MAAA,IAAI,EAAC,MAAvF;AAA8F,MAAA,WAAW,EAAC,cAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAVF,EAaE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAbF,EAcE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,EAAGH,CAAD,IAAK;AAAC,aAAKC,QAAL,CAAc;AAAEH,UAAAA,YAAY,EAAEE,CAAC,CAACE,aAAF,CAAgBC;AAAhC,SAAd;AAAuD,OAArF;AAAuF,MAAA,IAAI,EAAC,MAA5F;AAAmG,MAAA,WAAW,EAAC,mBAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF,EAkBE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWE,OAA9B;AAAuC,QAAA,YAAY,EAAE,KAAKF,KAAL,CAAWG,YAAhE;AAA8E,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,SAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB;AAAmI,MAAA,OAAO,EAAC,SAA3I;AAAqJ,MAAA,IAAI,EAAC,QAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAlBF,CADA,CAFF;AA4BD;;AAvCiD","sourcesContent":["import React from 'react'\nimport { Form, Button } from 'react-bootstrap';\n\nexport default class Viewers extends React.Component{\n  //state will store plataform, channel and num of viewers\n  constructor(props) {\n    super(props);\n    this.state = {plataform: '',\n                  channel: '',\n                  numOfViewers: 0\n                  }\n  }\n  \n  render(){\n    return(\n      \n      <div className=\"Form-Container\">\n      <Form>\n        <Form.Group >\n        <Form.Label>Select Plataform</Form.Label>\n          <Form.Control onChange={(e)=>{this.setState({ plataform: e.currentTarget.value })}} as=\"select\">\n            <option>Twitch</option>\n            <option>Mixer</option>\n            <option>Facebook</option>\n            <option>Youtube</option>\n          </Form.Control>\n          <Form.Label>Enter Channel Name</Form.Label>\n          <Form.Control onChange={(e)=>{this.setState({ channel: e.currentTarget.value })}} type=\"text\" placeholder=\"Channel Name\" />\n          <Form.Text className=\"text-muted\">\n            This process is for testing only.\n          </Form.Text>\n          <Form.Label>Desired Number of Viewers</Form.Label>\n          <Form.Control onChange={(e)=>{this.setState({ numOfViewers: e.currentTarget.value })}} type=\"text\" placeholder=\"Number of Viewers\" />\n        </Form.Group>\n        \n        <Button onClick={<StartBot channel={this.state.channel} numOfViewers={this.state.numOfViewers} plataform={this.state.plataform}/>} variant=\"primary\" type=\"submit\">\n          Start Viewers\n        </Button>\n      </Form>\n        \n      </div>\n    )\n  }\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}