{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/Viewers_Frontend/src/Components/Views.js\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nexport default class Viewers extends React.Component {\n  //state will store plataform, channel and num of viewers\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: '',\n      numOfViewers: 0,\n      time: 0,\n      status: \"notActive\"\n    };\n  } //Fetching to backend.. response not working yet..\n\n\n  handleRequest() {\n    const data = {\n      website: this.state.channel,\n      numOfViewers: this.state.numOfViewers,\n      time: this.state.time\n    };\n    console.log(data);\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(`http://localhost:3000/api`, options).then(resp => resp.json()).then(data => console.log(data));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Form-Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, this.state.status), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Enter Channel Website\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: e => {\n        this.setState({\n          channel: e.currentTarget.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"https://www.twitch.tv/user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"This process is for testing only.\"), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Desired Number of Viewers\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: e => {\n        this.setState({\n          numOfViewers: e.currentTarget.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"Number of Viewers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Time\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: e => {\n        this.setState({\n          time: e.currentTarget.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleRequest,\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Send\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/Viewers_Frontend/src/Components/Views.js"],"names":["React","Form","Button","Viewers","Component","constructor","props","state","channel","numOfViewers","time","status","handleRequest","data","website","console","log","options","method","headers","body","JSON","stringify","fetch","then","resp","json","render","e","setState","currentTarget","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Button } from 'react-bootstrap';\n\nexport default class Viewers extends React.Component{\n  //state will store plataform, channel and num of viewers\n  constructor(props) {\n    super(props);\n    this.state = {channel: '',\n                  numOfViewers: 0,\n                  time: 0,\n                  status: \"notActive\"\n                  }\n  }\n//Fetching to backend.. response not working yet..\n  handleRequest(){\n    const data = {website: this.state.channel, numOfViewers: this.state.numOfViewers, time: this.state.time}\n    console.log(data)\n    const options = {\n      method: 'POST',\n      headers : { \n        'Content-Type': 'application/json',\n       },\n      body: JSON.stringify(data),\n    }\n    fetch(`http://localhost:3000/api`, options)\n    .then(resp=>resp.json())\n    .then(data => console.log(data)\n      \n    )\n\n  }\n\n  \n  \n  render(){\n    return(\n      \n      <div className=\"Form-Container\">\n        <div>{this.state.status}</div>\n      <Form>\n        <Form.Group >\n          {/* CHannel or webiste not determine yet. Could have a drop down menu instead with main streaming platforms */}\n          <Form.Label>Enter Channel Website</Form.Label>\n          <Form.Control onChange={(e)=>{this.setState({ channel: e.currentTarget.value })}} type=\"text\" placeholder=\"https://www.twitch.tv/user\"/>\n          <Form.Text className=\"text-muted\">\n            This process is for testing only.\n          </Form.Text>\n          <Form.Label>Desired Number of Viewers</Form.Label>\n          <Form.Control onChange={(e)=>{this.setState({ numOfViewers: e.currentTarget.value })}} type=\"text\" placeholder=\"Number of Viewers\" />\n          <Form.Label>Time</Form.Label>\n          <Form.Control onChange={(e)=>{this.setState({ time: e.currentTarget.value })}} type=\"text\" placeholder=\"time\" />\n        </Form.Group>\n        \n        <Button onClick={this.handleRequest} variant=\"primary\" type=\"submit\">\n        Send\n         \n        </Button>\n      </Form>\n        \n      </div>\n    )\n  }\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}