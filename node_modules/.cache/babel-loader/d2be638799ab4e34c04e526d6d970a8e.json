{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/newTest/Viewers_Frontend/src/Components/Views.js\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nexport default class Viewers extends React.Component {\n  //state will store plataform, channel and num of viewers\n  constructor(props) {\n    super(props);\n\n    this.handleRequest = () => {\n      this.setState({\n        status: false\n      });\n      const data = {\n        website: this.state.channel,\n        numOfViewers: this.state.numOfViewers,\n        status: \"active\"\n      };\n      console.log(data);\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(`https://viewersbackend.herokuapp.com/api`, options).then(resp => resp.json()).then(data => {\n        console.log(data);\n      }).catch(err => {\n        // Error handling\n        console.log(\"Error Reading data \" + err);\n      });\n    };\n\n    this.handleStatusState = () => {\n      this.setState({\n        status: false\n      });\n      const data = {\n        website: this.state.channel,\n        numOfViewers: this.state.numOfViewers,\n        status: \"close\"\n      };\n      console.log(data);\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(`https://viewersbackend.herokuapp.com/api`, options).then(resp => resp.json()).then(data => {\n        console.log(data);\n      }).catch(err => {\n        // Error handling\n        console.log(\"Error Reading data \" + err);\n      });\n    };\n\n    this.state = {\n      channel: '',\n      numOfViewers: 0,\n      status: true\n    };\n  } //Fetching to backend.. response not working yet..\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Form-Container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"iframe\", {\n      src: \"http://localhost:3000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Enter Channel Website\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: e => {\n        this.setState({\n          channel: e.currentTarget.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"https://www.twitch.tv/user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"This process is for testing only.\"), /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Desired Number of Viewers\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: e => {\n        this.setState({\n          numOfViewers: e.currentTarget.value\n        });\n      },\n      type: \"text\",\n      placeholder: \"Number of Viewers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), this.state.status === false ? /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleStatusState,\n      variant: \"danger\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Stop\") : /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleRequest,\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \" Send\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/newTest/Viewers_Frontend/src/Components/Views.js"],"names":["React","Form","Button","Viewers","Component","constructor","props","handleRequest","setState","status","data","website","state","channel","numOfViewers","console","log","options","method","headers","body","JSON","stringify","fetch","then","resp","json","catch","err","handleStatusState","render","e","currentTarget","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Button } from 'react-bootstrap';\n\nexport default class Viewers extends React.Component{\n  //state will store plataform, channel and num of viewers\n  constructor(props) {\n    super(props);\n    this.state = {channel: '',\n                  numOfViewers: 0,\n                  status: true,\n                  \n                  }\n  }\n//Fetching to backend.. response not working yet..\n  handleRequest=()=>{\n    this.setState({status: false})\n    const data = {website: this.state.channel, numOfViewers: this.state.numOfViewers, status: \"active\"}\n    console.log(data)\n    const options = {\n      method: 'POST',\n      headers : { \n        'Content-Type': 'application/json',\n       },\n      body: JSON.stringify(data),\n    }\n    fetch(`https://viewersbackend.herokuapp.com/api`, options)\n    .then(resp=>resp.json())\n    .then(data => {console.log(data)})\n\n    .catch(err => {\n      // Error handling\n      console.log(\"Error Reading data \" + err);\n    });\n\n  }\n  handleStatusState=()=>{\n    this.setState({status: false})\n    const data = {website: this.state.channel, numOfViewers: this.state.numOfViewers, status: \"close\"}\n    console.log(data)\n    const options = {\n      method: 'POST',\n      headers : { \n        'Content-Type': 'application/json',\n       },\n      body: JSON.stringify(data),\n    }\n    fetch(`https://viewersbackend.herokuapp.com/api`, options)\n    .then(resp=>resp.json())\n    .then(data => {console.log(data)})\n\n    .catch(err => {\n      // Error handling\n      console.log(\"Error Reading data \" + err);\n    });\n  }\n  \n  \n  render(){\n    return(\n      \n      <div className=\"Form-Container\">\n     \n        <iframe src=\"http://localhost:3000\"></iframe>\n         \n          {/* CHannel or webiste not determine yet. Could have a drop down menu instead with main streaming platforms */}\n          <Form.Label>Enter Channel Website</Form.Label>\n          <Form.Control onChange={(e)=>{this.setState({ channel: e.currentTarget.value })}} type=\"text\" placeholder=\"https://www.twitch.tv/user\"/>\n          <Form.Text className=\"text-muted\">\n            This process is for testing only.\n          </Form.Text>\n          <Form.Label>Desired Number of Viewers</Form.Label>\n          <Form.Control onChange={(e)=>{this.setState({ numOfViewers: e.currentTarget.value })}} type=\"text\" placeholder=\"Number of Viewers\" />\n          {this.state.status === false ?\n          <Button onClick={this.handleStatusState} variant=\"danger\" type=\"submit\">Stop</Button>\n          :\n          <Button onClick={this.handleRequest} variant=\"success\" type=\"submit\"> Send</Button>\n          }\n      </div>\n    )\n  }\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}